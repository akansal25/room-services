import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
		maven { url "http://repo.spring.io/plugins-release" }
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('com.github.ksoichiro:gradle-console-reporter:0.5.0')
		classpath ('com.bmuschko:gradle-docker-plugin:3.2.5')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: "jacoco"
apply plugin: "io.spring.dependency-management"
apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.github.ksoichiro.console.reporter'

defaultTasks 'bootRun'

group = 'com.cube.services.room'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	jcenter()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.apache.commons:commons-lang3:3.4')
	compile('io.springfox:springfox-swagger2:2.4.0')
	compile('io.springfox:springfox-swagger-ui:2.4.0')
	runtime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

task copyDockerFiles(type: Copy) {
	description = "Copy Dockerfile and required data to build directory"
	from 'src/main/docker'
	from "${project.buildDir}/libs"
	into { "${project.buildDir}/docker" }
	include "*"
	exclude "**/*.yml"
}

task buildDocker(type: DockerBuildImage, dependsOn: 'copyDockerFiles') {
	description = "Package application as Docker image"
	group = "Docker"
	inputDir = project.file("${project.buildDir}/docker")
	tags = ["room-services:latest".toString(), "room-services:${project.version}".toString()]
}
